[prefix{l}]Существует несколько команд, которые можно использовать для улучшения страницы. Все команды должны идти между '[ ]'. Следующие команды можно использовать:

[prefix{n}]image{x,y,imageLocation} [prefix{}]
[prefix{n}]image{x,y,scale,imageLocation} [prefix{}]
Позволяет включать изображения. Неважно, где в файле .txt вы помещаете эту команду, она будет помещаться в заданные x и y. ImageLocation - это место, которое было бы знакомо разработчикам мод как ресурс. Это означает, что вам нужно поместить изображение в папку "assets/modName/". Например, вы создали изображение и поместили его в "assets/igwmod/wiki/test.png". Чтобы получить доступ к нему с помощью команды image, используйте "igwmod:wiki/test.png" как imageLocation. Таким образом "assets/" не нужно упоминать, сначала имя мода и затем ':'. 

[prefix{n}]crafting{x,y,key=keyName} [prefix{}]
Позволяет включать рецепты верстака. Это автоматически помещает изображение и заполняет элементы рецепта. Для этого ему нужен ключ. Ключи можно обрабатывать двумя способами:
 
Вы можете использовать имя элемента IGW в качестве ключа (к примеру, 'block/pistonBase'), а IGW-Mod будет использовать первый зарегистрированный рецепт, который имеет указанный элемент в качестве вывода. Это работает для всех рецептов верстака (форменный, бесформенный, ванила, любой мод). Существует проблема с элементами, которые имеют несколько рецептов крафта. Например, если Вы посмотрите на крафт шерсти, Вы увидите, что можете создать шерсть определенного цвета, объединив либо 8 блоков шерсти с красителем, чтобы получить 8, либо 1 шерсть в сочетании с красителем, чтобы получить 1. Только первый рецепт добавленный может отображаться, используя "block/cloth.gray" в качестве ключа.

Для решения этой проблемы вам понадобится немного кода. Для разработчиков модов: Посмотрите на CraftingRetrievalEvent.java. Это позволит вам использовать любой ключ для определенного рецепта.

Если в этой команде нет способа добавить рецепт, вы можете использовать следующую команду для 'жесткого кода' рецепта.

[prefix{n}]crafting{x,y,block/pistonBase,www,cic,crc,
w=block/wood.oak,c=block/stonebrick,i=item/ingotIron,
r=item/redstone} [prefix{}]
Позволяет включить специальный рецепт.
x,y = x,y расположение рецепт (например, с помощью команды image). Следующие три параметра являются шаблоном создания. В этом примере вырисовывается рецепт поршня, и был выбран следующий шаблон:

www
cic
crc

Если мы заменим всюду, где есть 'w' - Wooden Plank, 'c' - Cobblestone, 'i' - Iron Ingot и 'r' - Redstone Dust, получим рецепт поршня. И это определяется следующими параметрами:

w=block/wood.oak
c=block/stonebrick
i=item/ingotIron
r=item/redstone

Затем, не в последнюю очередь, после '}' вы можете указать выход рецепта, который является поршнем в нашем случае (block/pistonBase). Если на выходе должно получиться более 1 предмета, Вы можете добавить, к примеру, '#4' если предметов должно получиться 4.

[prefix{n}]furnace{x,y,key=keyName} [prefix{}]
Аналогичным образом с помощью этой команды вы можете вставлять рецепты печи в страницу вики. Она использует такую же систему ключей, как и crafting: Когда Вы используете имя предмета/блока, это покажет первый рецепт печи, где указанный  предмет/блок получается на выходе. Если существует несколько рецептов печи с одинаковым выходом, разработчик мода может использовать FurnaceRetrievalEvent.java.

[prefix{n}]furnace{x,y,inputItem,outputItem} [prefix{}]
Ручной вариант описания рецепта. inputItem и outputItem должны быть именами IGW-Mod (например, block/sand и block/glass).

[prefix{n}]color{hexColor} [prefix{}]
После этой команды текст будет окрашен в указанный цвет. Значение hex: RRGGBB, поэтому первые два (hex) числа представляют красный, второй два зеленый и последние два синий цвета. Немного примеров:

color{FFFFFF}  --> белый
color{FF0000}  --> красный
color{000000}  --> чёрный
color{AAFFAA}  --> яркий светло-зелёный

Чтобы сделать текст синим цветом, пишите color{0000FF}, напишите текст, который должен быть синим, а затем верните текст в исходное color{000000}.

[prefix{n}]prefix{pref} [prefix{}]
С помощью этой команды вы можете выполнить форматирование текста. Вы можете это использовать вместо предыдущей команды color, но также можете сделать кое-что другое, например, жирный или подчеркнутый текст. Вот полный список, этот список используется самим Minecraft, и его можно найти, перейдя по адресу http://minecraft.gamepedia.com/Color_Codes.

prefix{0} --> Black
prefix{1} --> Dark Blue
prefix{2} --> Dark Green
prefix{3} --> Dark Aqua
prefix{4} --> Dark Red
prefix{5} --> Dark Purple
prefix{6} --> Gold
prefix{7} --> Gray
prefix{8} --> Dark Gray
prefix{9} --> Blue
prefix{a} --> Green
prefix{b} --> Aqua
prefix{c} --> Red
prefix{d} --> Light Purple
prefix{e} --> Yellow
prefix{f} --> White

prefix{k} --> Obfuscated (Random)
prefix{l} --> Bold
prefix{m} --> Strikethrough
prefix{n} --> Underline
prefix{o} --> Italic
prefix{} --> Reset

[prefix{n}]link{linkAddress} [prefix{}]
Эта команда используется для ссылки на другие страницы или URL, добавляя кликабельный текст. Если вы хотите дать группе слов ссылку, поставьте команду link со ссылкой перед этой группой слов, затем команду link{} (да, пустую ссылку) после.

Вы можете просто сделать link{block/pistonBase} для ссылки на страницу вики с описанием поршня. Когда сылка является другой страницей, адрес ссылки относительно assets/igwmod/wiki/<language>/

[prefix{n}]variable{<variableName>} [prefix{}]
Это команда используется как мост между страницей и кодом. Он позволяет указывать значения в странице вики, которые могут меняться, например параметры конфигурации или значения, подверженные изменению. При использовании этой команды переменная VariableRetrievalEvent запускается с помощью <variableName>. См. этот класс для получения дополнительной информации.